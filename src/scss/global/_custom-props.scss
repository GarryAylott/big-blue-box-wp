@use "sass:color";
@use "../tokens" as *;

:root {
    /* Font sizes (scale steps) */
    @each $step, $val in $font-sizes {
        --step-#{$step}: #{$val};
    }

    /* Base spacing scale */
    @each $name, $val in $spacing {
        --space-#{$name}: #{$val};
    }

    /* One-up pairs */
    --space-3xs-2xs: clamp(0.25rem, 0.163rem + 0.4348vi, 0.5rem);
    --space-2xs-xs: clamp(0.375rem, 0.1576rem + 1.087vi, 1rem);
    --space-xs-s: clamp(0.8125rem, 0.6603rem + 0.7609vi, 1.25rem);
    --space-s-m: clamp(1rem, 0.6957rem + 1.5217vi, 1.875rem);
    --space-m-l: clamp(1.5rem, 1.1522rem + 1.7391vi, 2.5rem);
    --space-l-xl: clamp(2rem, 1.3913rem + 3.0435vi, 3.75rem);
    --space-xl-2xl: clamp(3rem, 2.3043rem + 3.4783vi, 5rem);
    --space-2xl-3xl: clamp(4rem, 2.7826rem + 6.087vi, 7.5rem);

    /* Other spacing values */
    --gutter: var(--space-m);
    --gutter-large: var(--space-l);
    --flow-space-tiny: var(--space-3xs-2xs);
    --flow-space-small: var(--space-2xs-xs);
    --flow-space: var(--space-s-m);
    --flow-space-large: var(--space-l-xl);
    --flow-space-xl: calc(var(--space-2xl-3xl) + var(--space-s));

    /* Colours */
    @each $name, $col in $colors {
        --clr-#{$name}-rgb: #{color.channel($col, "red", $space: rgb)},
            #{color.channel($col, "green", $space: rgb)},
            #{color.channel($col, "blue", $space: rgb)};
        --clr-#{$name}-hsl: #{color.channel($col, "hue", $space: hsl)}
            #{color.channel($col, "saturation", $space: hsl)}
            #{color.channel($col, "lightness", $space: hsl)};
    }
}

// Usage (watch for the "/" vs ",")...
// Full color variable    → var(--clr-brand-accent)
// RGB no alpha           → rgb(var(--clr-brand-accent-rgb))
// RGB with alpha         → rgba(var(--clr-brand-accent-rgb), 0.4)
// HSL no alpha           → hsl(var(--clr-brand-accent-hsl))
// HSL with alpha         → hsl(var(--clr-brand-accent-hsl) / 0.4)
